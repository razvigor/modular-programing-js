{"version":3,"file":"main.bundle.js","mappings":"mBAAA,IAAIA,EAAa,GCAbC,EAAU,GCGVC,EAAgBC,SAASC,eAAe,UACxCC,EAAkB,EAkDtB,SAASC,IACR,OAAOD,CACP,CCrDDF,SAASC,eAAe,aAAaG,iBAAiB,SAAS,WHG/D,IAAiBC,IGFDL,SAASC,eAAe,QAAQK,MHG/CT,EAAaQ,EEDd,WA6CA,IAAyBE,EFhDxBC,QAAQC,IAAI,yBAA2BZ,EAAa,KEgD5BU,EA1CRP,SAASC,eAAe,YAAYK,MA2CpDJ,EAAkBK,EAzClB,IADA,IAAIG,EAAW,GACNC,EAAI,EAAGA,GAAKT,EAAiBS,IACrCD,GAAY,yBACZA,GACC,qBACAC,EACA,uDACDD,GAAYX,EAAcO,MAAQ,MAAQK,EAAI,cAC9CD,GACC,2EACAC,EACA,qBACDD,GAAY,SAGKV,SAASC,eAAe,QAC9BW,UAAYF,EAExBV,SAASC,eAAe,aAAaY,gBAAgB,WACrD,CCxBAC,EACA,IACDd,SAASC,eAAe,aAAaG,iBAAiB,SAAS,YDuB/D,WAIC,IAHA,IAAIW,EAAiBZ,IACjBa,EAAQ,EAEHL,EAAI,EAAGA,GAAKI,EAAgBJ,IAAK,CACzC,IAAIM,EAASjB,SAASC,eAAe,SAAWU,GAAGL,MAC/CK,EAAIZ,EAAcO,OAASW,GAC9BD,GAED,CACD,IDvCkBE,ICuCL,CACZC,KF9BMtB,EE+BNmB,MAAOA,EACPI,SAAUL,EACVM,OAAQtB,EAAcO,OD1CvBR,EAAQwB,KAAKJ,GAEd,WAGC,IAFA,IAAIK,EAAS,sBAEJC,EAAM,EAAGA,EAAM1B,EAAQ2B,OAAQD,IAAO,CAC9C,IAAIE,EAAS5B,EAAQ0B,GACrBD,GAAU,OACVA,GACCG,EAAOP,KACP,KACAO,EAAOV,MACP,MACAU,EAAON,SACP,qBACAM,EAAOL,OACRE,GAAU,OACV,CAEmBvB,SAASC,eAAe,UAC9BW,UAAYW,CAC1B,CCwBAI,GAEA3B,SAASC,eAAe,aAAa2B,aAAa,WAAY,OAC9D,CC1CAd,EACA,IACDd,SAASC,eAAe,YAAYK,MAAQQ,G","sources":["webpack://webpack/./src/player.js","webpack://webpack/./src/scoreboard.js","webpack://webpack/./src/game.js","webpack://webpack/./src/app.js"],"sourcesContent":["var playerName = '';\r\n\r\nfunction logPlayer() {\r\n\tconsole.log('The current player is ' + playerName + '.');\r\n}\r\n\r\nfunction setName(newName) {\r\n\tplayerName = newName;\r\n}\r\n\r\nfunction getName() {\r\n\treturn playerName;\r\n}\r\n\r\nexport { logPlayer, setName, getName };\r\n","var results = [];\r\nfunction addResult(newResult) {\r\n\tresults.push(newResult);\r\n}\r\nfunction updateScoreboard() {\r\n\tvar output = '<h2>Scoreboard</h2>';\r\n\r\n\tfor (var ind = 0; ind < results.length; ind++) {\r\n\t\tvar result = results[ind];\r\n\t\toutput += '<h4>';\r\n\t\toutput +=\r\n\t\t\tresult.name +\r\n\t\t\t': ' +\r\n\t\t\tresult.score +\r\n\t\t\t' / ' +\r\n\t\t\tresult.problems +\r\n\t\t\t' result -- factor ' +\r\n\t\t\tresult.factor;\r\n\t\toutput += '</h4>';\r\n\t}\r\n\r\n\tvar scoresElement = document.getElementById('scores');\r\n\tscoresElement.innerHTML = output;\r\n}\r\n\r\nexport { addResult, updateScoreboard };\r\n","import * as player from './player.js';\r\nimport * as scoreboard from './scoreboard.js';\r\n\r\nvar factorElement = document.getElementById('factor');\r\nvar problemsPergame = 3;\r\n\r\nfunction printGame() {\r\n\tplayer.logPlayer();\r\n\r\n\tsetProblemCount(document.getElementById('problems').value);\r\n\tvar gameForm = '';\r\n\tfor (var i = 1; i <= problemsPergame; i++) {\r\n\t\tgameForm += '<div class=\"row mb-3\">';\r\n\t\tgameForm +=\r\n\t\t\t'<label for=\"ansver' +\r\n\t\t\ti +\r\n\t\t\t'\" class=col-sm-4 col-form-label fw-bolder text-end\">';\r\n\t\tgameForm += factorElement.value + ' x ' + i + ' = </label>';\r\n\t\tgameForm +=\r\n\t\t\t'<div class=\"col-sm-2\"><input type=\"text\" class=\"form-control\" id=\"answer' +\r\n\t\t\ti +\r\n\t\t\t'\" value=\"\" ></div>';\r\n\t\tgameForm += '</div>';\r\n\t}\r\n\r\n\tvar gameElement = document.getElementById('game');\r\n\tgameElement.innerHTML = gameForm;\r\n\r\n\tdocument.getElementById('calculate').removeAttribute('disabled');\r\n}\r\nfunction calculateScore() {\r\n\tvar problemsInGame = getProblemCount();\r\n\tvar score = 0;\r\n\r\n\tfor (var i = 1; i <= problemsInGame; i++) {\r\n\t\tlet answer = document.getElementById('answer' + i).value;\r\n\t\tif (i * factorElement.value == answer) {\r\n\t\t\tscore++;\r\n\t\t}\r\n\t}\r\n\tvar result = {\r\n\t\tname: player.getName(),\r\n\t\tscore: score,\r\n\t\tproblems: problemsInGame,\r\n\t\tfactor: factorElement.value,\r\n\t};\r\n\tscoreboard.addResult(result);\r\n\tscoreboard.updateScoreboard();\r\n\r\n\tdocument.getElementById('calculate').setAttribute('disabled', 'true');\r\n}\r\nfunction setProblemCount(newProblemCount) {\r\n\tproblemsPergame = newProblemCount;\r\n}\r\nfunction getProblemCount() {\r\n\treturn problemsPergame;\r\n}\r\n\r\nexport { printGame, calculateScore, getProblemCount, setProblemCount };\r\n","import * as player from './player.js';\r\nimport * as game from './game.js';\r\n\r\ndocument.getElementById('startGame').addEventListener('click', function () {\r\n\tplayer.setName(document.getElementById('name').value);\r\n\tgame.printGame();\r\n});\r\ndocument.getElementById('calculate').addEventListener('click', function () {\r\n\tgame.calculateScore();\r\n});\r\ndocument.getElementById('problems').value = game.getProblemCount();\r\n"],"names":["playerName","results","factorElement","document","getElementById","problemsPergame","getProblemCount","addEventListener","newName","value","newProblemCount","console","log","gameForm","i","innerHTML","removeAttribute","game","problemsInGame","score","answer","newResult","name","problems","factor","push","output","ind","length","result","scoreboard","setAttribute"],"sourceRoot":""}